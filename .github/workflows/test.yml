name: Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ make python3-dev
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements_test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Install build dependencies first
        pip install Cython
        # Prefer binary wheels and increase timeout for any compilation
        pip install -r requirements_test.txt --prefer-binary --timeout 300
    
    - name: Run code quality checks
      run: |
        # Code formatting
        black --check --diff custom_components/ tests/
        
        # Import sorting
        isort --check --diff custom_components/ tests/
        
        # Type checking
        mypy custom_components/everhome/
        
        # Linting
        flake8 custom_components/ tests/
    
    - name: Run tests with coverage
      env:
        PYTHONPATH: .
      run: |
        pytest tests/ \
          --cov=custom_components.everhome \
          --cov-report=term-missing \
          --cov-report=xml \
          --cov-report=html \
          --cov-fail-under=85
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  validate-hacs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: HACS validation
      uses: hacs/action@main
      with:
        category: integration
        ignore: brands

  validate-hassfest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Hassfest validation
      uses: home-assistant/actions/hassfest@master